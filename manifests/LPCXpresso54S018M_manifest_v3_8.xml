<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_SUPER" name="SDKVersion 2.9.0 SuperSet" brief="This is SDK version 2.9.0 manifest file." format_version="3.8" api_version="2.0.0" configuration="37bbf4eb706f3814bfad8f3a27525c83" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.8.xsd">
  <!--Timestamp (UTC): 2021-01-14 13:21:35.667079-->
  <!--This manifest is generated based on sdk repo commit: 3073e476325c80265f0c6d9a806af8fd0bfd767b-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
    <define name="CPU_$|package|_$|core_name|" value=""/>
  </defines>
  <ksdk id="MCUXpressoSDK290" name="MCUXpressoSDK290" version="2.9.0"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
  </compilers>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="9.3.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="lpcxpresso54s018m" name="LPCXpresso54S018M" href="https://www.nxp.com/pip/LPC54S018M-EVK" version="1.0.0" package="LPC54S018J4MET180">
      <description>LPCXpresso Development Board for LPC54S018JxM MCUs</description>
      <image path="boards/lpcxpresso54s018m" type="image">
        <files mask="lpcxpresso54s018m.png"/>
      </image>
      <defines>
        <define name="XIP_IMAGE" value=""/>
      </defines>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_lpcxpresso54s018m" name="PROGRAM_FLASH" addr="10000000" size="00400000" type="Flash" access="RO"/>
        <memoryBlock id="BOARD_SDRAM_lpcxpresso54s018m" name="BOARD_SDRAM" addr="a0000000" size="02000000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="4096" ram_size_kb="16384"/>
      <examples>
        <example id="lpcxpresso54s018m_crc" name="crc" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" path="boards/lpcxpresso54s018m/driver_examples/crc">
          <external path="boards/lpcxpresso54s018m/driver_examples/crc" type="xml">
            <files mask="crc_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_dma_memory_to_memory" name="dma_memory_to_memory" brief="The DMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example fordebugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="boards/lpcxpresso54s018m/driver_examples/dma/memory_to_memory">
          <external path="boards/lpcxpresso54s018m/driver_examples/dma/memory_to_memory" type="xml">
            <files mask="dma_memory_to_memory_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_dma_wrap_transfer" name="dma_wrap_transfer" brief="The DMA wrap transfer example is a simple demonstration program that uses the SDK software.It executes a wrap transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA wrap feature." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="boards/lpcxpresso54s018m/driver_examples/dma/wrap_transfer">
          <external path="boards/lpcxpresso54s018m/driver_examples/dma/wrap_transfer" type="xml">
            <files mask="dma_wrap_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_enet_txrx_ptp1588_transfer" name="enet_txrx_ptp1588_transfer" brief="The enet_rxtx_ptp1588_transfer example shows the way to use ENET driver to   receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET.2. How to get the time stamp of the PTP 1588 timer.3. How to use Get the ENET transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received(the outside loopback cable can be used to see the right rx time-stamping log since we send the ptp message). " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/enet" path="boards/lpcxpresso54s018m/driver_examples/enet/txrx_ptp1588_transfer">
          <external path="boards/lpcxpresso54s018m/driver_examples/enet/txrx_ptp1588_transfer" type="xml">
            <files mask="enet_txrx_ptp1588_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_gpio_led_output" name="gpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs. The example use LEDs and buttons to demonstrates GPIO API for port and pin manipulation (init, set,clear, and toggle)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpio" path="boards/lpcxpresso54s018m/driver_examples/gpio/led_output">
          <external path="boards/lpcxpresso54s018m/driver_examples/gpio/led_output" type="xml">
            <files mask="gpio_led_output_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/lpcxpresso54s018m/demo_apps/hello_world">
          <external path="boards/lpcxpresso54s018m/demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_i2c_dma_b2b_transfer_master" name="i2c_dma_b2b_transfer_master" brief="The i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/lpcxpresso54s018m/driver_examples/i2c/dma_b2b_transfer/master">
          <external path="boards/lpcxpresso54s018m/driver_examples/i2c/dma_b2b_transfer/master" type="xml">
            <files mask="i2c_dma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_i2c_dma_b2b_transfer_slave" name="i2c_dma_b2b_transfer_slave" brief="The i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/lpcxpresso54s018m/driver_examples/i2c/dma_b2b_transfer/slave">
          <external path="boards/lpcxpresso54s018m/driver_examples/i2c/dma_b2b_transfer/slave" type="xml">
            <files mask="i2c_dma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_i2c_interrupt_b2b_transfer_master" name="i2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/lpcxpresso54s018m/driver_examples/i2c/interrupt_b2b_transfer/master">
          <external path="boards/lpcxpresso54s018m/driver_examples/i2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_i2c_interrupt_b2b_transfer_slave" name="i2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/lpcxpresso54s018m/driver_examples/i2c/interrupt_b2b_transfer/slave">
          <external path="boards/lpcxpresso54s018m/driver_examples/i2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_led_blinky" name="led_blinky" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/lpcxpresso54s018m/demo_apps/led_blinky">
          <external path="boards/lpcxpresso54s018m/demo_apps/led_blinky" type="xml">
            <files mask="led_blinky_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_puf" name="puf" brief="This driver example project demonstrates how to use driver for the PUF controller which provides a secure key storage." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/puf" path="boards/lpcxpresso54s018m/driver_examples/puf">
          <external path="boards/lpcxpresso54s018m/driver_examples/puf" type="xml">
            <files mask="puf_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_spi_interrupt" name="spi_interrupt" brief="The spi_interrupt example shows how to use spi functional API to do interrupt transfer:In this example, one spi instance as master and another spi instance as slave. Master sends a piece of data to slave,and check if the data slave received is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/lpcxpresso54s018m/driver_examples/spi/interrupt">
          <external path="boards/lpcxpresso54s018m/driver_examples/spi/interrupt" type="xml">
            <files mask="spi_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_spi_interrupt_b2b_master" name="spi_interrupt_b2b_master" brief="The spi_interrupt_b2b_master example shows how to use spi functional API to do interrupt transfer as a master:In this example, the spi instance as master. Master sends a piece of data to slave, receive data from slave,and checkif the data master received is correct. This example needs to work with spi_interrupt_b2b_slave example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/lpcxpresso54s018m/driver_examples/spi/interrupt_b2b/master">
          <external path="boards/lpcxpresso54s018m/driver_examples/spi/interrupt_b2b/master" type="xml">
            <files mask="spi_interrupt_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_spi_interrupt_b2b_slave" name="spi_interrupt_b2b_slave" brief="The spi_interrupt_b2b_slave example shows how to use spi functional API to do interrupt transfer as a slave:In this example, the spi instance as slave. Slave receives data froma master and send a peiece of data to master,and check if the data slave received is correct. This example needs to work with spi_interrupt_b2b_master example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/lpcxpresso54s018m/driver_examples/spi/interrupt_b2b/slave">
          <external path="boards/lpcxpresso54s018m/driver_examples/spi/interrupt_b2b/slave" type="xml">
            <files mask="spi_interrupt_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_spi_interrupt_b2b_transfer_master" name="spi_interrupt_b2b_transfer_master" brief="The spi_interrupt_board2board_master example shows how to use spi driver as master to do board to board transfer withinterrupt:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/lpcxpresso54s018m/driver_examples/spi/interrupt_b2b_transfer/master">
          <external path="boards/lpcxpresso54s018m/driver_examples/spi/interrupt_b2b_transfer/master" type="xml">
            <files mask="spi_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_spi_interrupt_b2b_transfer_slave" name="spi_interrupt_b2b_transfer_slave" brief="The spi_interrupt_board2board_slave example shows how to use spi driver as slave to do board to board transfer with interrupt:In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/lpcxpresso54s018m/driver_examples/spi/interrupt_b2b_transfer/slave">
          <external path="boards/lpcxpresso54s018m/driver_examples/spi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="spi_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_spi_polling_b2b_transfer_master" name="spi_polling_b2b_transfer_master" brief="The spi_polling_board2board_master example shows how to use spi driver as master to do board to board transfer with polling:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/lpcxpresso54s018m/driver_examples/spi/polling_b2b_transfer/master">
          <external path="boards/lpcxpresso54s018m/driver_examples/spi/polling_b2b_transfer/master" type="xml">
            <files mask="spi_polling_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54s018m_spi_polling_b2b_transfer_slave" name="spi_polling_b2b_transfer_slave" brief="The spi_polling_board2board_slave example shows how to use spi driver as slave to do board to board transfer withpolling:Notice: The SPI slave of this example uses interrupt mode, as there is no polling mode for SPI slave.In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/lpcxpresso54s018m/driver_examples/spi/polling_b2b_transfer/slave">
          <external path="boards/lpcxpresso54s018m/driver_examples/spi/polling_b2b_transfer/slave" type="xml">
            <files mask="spi_polling_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="PROGRAM_FLASH_lpcxpresso54s018m">
              <driverBinary path="devices/LPC54S018M/mcuxpresso" type="binary">
                <files mask="LPC540xx_SPIFI_SFDP.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
  </boards>
  <devices>
    <device id="LPC54S018J2M" name="LPC54S018M" version="1.0.0" full_name="LPC54S018J2M" family="LPC540xx" platform="LPC">
      <description>Power-Efficient Microcontrollers (MCUs) with Advanced Peripherals Based on Arm Cortex-M4 Core and Security</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="compatible_device.segger" value="LPC54S018J4M"/>
      </metadataSet>
      <core id="core0_LPC54S018J2M" name="core0" fpu="true" type="cm4"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_LPC54S018J2M" name="PROGRAM_FLASH" addr="10000000" size="00200000" type="Flash" access="RO"/>
        <memoryBlock id="SRAMX_LPC54S018J2M" name="SRAMX" addr="00000000" size="00030000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_0_1_2_3_LPC54S018J2M" name="SRAM_0_1_2_3" addr="20000000" size="00028000" type="RAM" access="RW"/>
        <memoryBlock id="USB_RAM_LPC54S018J2M" name="USB_RAM" addr="40100000" size="00002000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="2048" ram_size_kb="352"/>
      <package id="LPC54S018J2MET180" name="LPC54S018J2MET180"/>
      <evaluation_boards>
        <evaluation_board name="lpcxpresso54s018m"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.LPC54S018J2M" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.LPC54S018J2M" name="internal.has_swo" value="true"/>
            <params id="misc.options.LPC54S018J2M" name="misc.options" value="--bootromstall 0x40000040"/>
            <params id="vector.catch.release.LPC54S018J2M" name="vector.catch" value="true"/>
            <params id="flash.driver.reset.release.LPC54S018J2M" name="flash.driver.reset" value="SOFT"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_LPC54S018J2M">
              <driverBinary path="devices/LPC54S018M/mcuxpresso" type="binary">
                <files mask="LPC540xx_SPIFI_SFDP.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
    <device id="LPC54S018J4M" name="LPC54S018M" version="1.0.0" full_name="LPC54S018J4M" family="LPC540xx" platform="LPC">
      <description>Power-Efficient Microcontrollers (MCUs) with Advanced Peripherals Based on Arm Cortex-M4 Core and Security</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="compatible_device.segger" value="LPC54S018J4M"/>
      </metadataSet>
      <core id="core0_LPC54S018J4M" name="core0" fpu="true" type="cm4"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_LPC54S018J4M" name="PROGRAM_FLASH" addr="10000000" size="00400000" type="Flash" access="RO"/>
        <memoryBlock id="SRAMX_LPC54S018J4M" name="SRAMX" addr="00000000" size="00030000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_0_1_2_3_LPC54S018J4M" name="SRAM_0_1_2_3" addr="20000000" size="00028000" type="RAM" access="RW"/>
        <memoryBlock id="USB_RAM_LPC54S018J4M" name="USB_RAM" addr="40100000" size="00002000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="4096" ram_size_kb="352"/>
      <package id="LPC54S018J4MET180" name="LPC54S018J4MET180"/>
      <evaluation_boards>
        <evaluation_board name="lpcxpresso54s018m"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.LPC54S018J4M" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.LPC54S018J4M" name="internal.has_swo" value="true"/>
            <params id="misc.options.LPC54S018J4M" name="misc.options" value="--bootromstall 0x40000040"/>
            <params id="vector.catch.release.LPC54S018J4M" name="vector.catch" value="true"/>
            <params id="flash.driver.reset.release.LPC54S018J4M" name="flash.driver.reset" value="SOFT"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_LPC54S018J4M">
              <driverBinary path="devices/LPC54S018M/mcuxpresso" type="binary">
                <files mask="LPC540xx_SPIFI_SFDP.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.lpcxpresso54s018m.LPC54S018M" name="lpcxpresso54s018m" brief="Board_project_template lpcxpresso54s018m" version="1.0.0" full_name="Board_project_template lpcxpresso54s018m" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/lpcxpresso54s018m/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="component.usart_adapter.LPC54S018M"/>
          <component_dependency value="platform.drivers.flexcomm_usart.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_gpio.LPC54S018M"/>
          <component_dependency value="platform.drivers.flexcomm.LPC54S018M"/>
          <component_dependency value="platform.drivers.power.LPC54S018M"/>
          <component_dependency value="platform.drivers.clock.LPC54S018M"/>
          <component_dependency value="platform.drivers.emc.LPC54S018M"/>
          <component_dependency value="device.LPC54S018M_startup.LPC54S018M"/>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.LPC54S018M"/>
              <component_dependency value="utility.debug_console.LPC54S018M"/>
            </all>
            <component_dependency value="utility.debug_console_lite.LPC54S018M"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS.LPC54S018M" name="CMSIS" brief="Cmsis" version="5.6.0" full_name="Cmsis" devices="LPC54S018J2M LPC54S018J4M" user_visible="true" type="CMSIS" package_base_path="CMSIS" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver"/>
          <component_dependency value="platform.CMSIS_Driver_Include.CAN_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Flash_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.MCI_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.NAND_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SAI_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.LPC54S018M"/>
          <component_dependency value="platform.Include_dsp.LPC54S018M"/>
          <component_dependency value="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" project_relative_path="CMSIS" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="core_cm1.h"/>
        <files mask="core_cm0.h"/>
        <files mask="tz_context.h"/>
        <files mask="core_cm23.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_cm3.h"/>
        <files mask="core_cm33.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_common_tables.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="arm_math.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm7.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="core_dsp.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_sc300.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" brief="Cmsis_driver" version="2.7.1" full_name="Cmsis_driver" user_visible="true" type="CMSIS" package_base_path="CMSIS/Driver/DriverTemplates" project_base_path="Driver/DriverTemplates">
      <source relative_path="./" type="src">
        <files mask="Driver_USBD.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_USBH.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_CAN.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.LPC54S018M" name="CAN" brief="Cmsis_driver_include can" version="1.2.0" full_name="Cmsis_driver_include can" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M" name="Common" brief="Cmsis_driver_include common" version="2.7.1" full_name="Cmsis_driver_include common" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54S018M" name="Ethernet" brief="Cmsis_driver_include ethernet" version="2.1.0" full_name="Cmsis_driver_include ethernet" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.LPC54S018M" name="Ethernet_MAC" brief="Cmsis_driver_include ethernet_mac" version="2.1.0" full_name="Cmsis_driver_include ethernet_mac" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.LPC54S018M" name="Ethernet_PHY" brief="Cmsis_driver_include ethernet_phy" version="2.1.0" full_name="Cmsis_driver_include ethernet_phy" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.LPC54S018M" name="Flash" brief="Cmsis_driver_include flash" version="2.2.0" full_name="Cmsis_driver_include flash" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.LPC54S018M" name="GPIO" brief="Cmsis_driver_include gpio" version="2.0.0" full_name="Cmsis_driver_include gpio" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54S018M" name="I2C" brief="Cmsis_driver_include i2c" version="2.3.0" full_name="Cmsis_driver_include i2c" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.LPC54S018M" name="MCI" brief="Cmsis_driver_include mci" version="2.3.0" full_name="Cmsis_driver_include mci" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.LPC54S018M" name="NAND" brief="Cmsis_driver_include nand" version="2.3.0" full_name="Cmsis_driver_include nand" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.LPC54S018M" name="SAI" brief="Cmsis_driver_include sai" version="1.1.0" full_name="Cmsis_driver_include sai" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.LPC54S018M" name="SPI" brief="Cmsis_driver_include spi" version="2.2.0" full_name="Cmsis_driver_include spi" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.LPC54S018M" name="USART" brief="Cmsis_driver_include usart" version="2.3.0" full_name="Cmsis_driver_include usart" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54S018M" name="USB" brief="Cmsis_driver_include usb" version="2.2.0" full_name="Cmsis_driver_include usb" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.LPC54S018M" name="USB_Device" brief="Cmsis_driver_include usb_device" version="2.2.0" full_name="Cmsis_driver_include usb_device" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.LPC54S018M" name="USB_Host" brief="Cmsis_driver_include usb_host" version="2.2.0" full_name="Cmsis_driver_include usb_host" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.LPC54S018M" name="WiFi" brief="Cmsis_driver_include wifi" version="1.0.0" full_name="Cmsis_driver_include wifi" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_common.LPC54S018M" name="CMSIS_Include_common" brief="Cmsis_include_common" version="5.3.0" full_name="Cmsis_include_common" devices="LPC54S018J2M LPC54S018J4M" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_iccarm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Include_common_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_core_cm4.LPC54S018M" name="CMSIS_Include_core_cm4" brief="Cmsis_include_core_cm4" version="5.3.0" full_name="Cmsis_include_core_cm4" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.LPC54S018M"/>
          <component_dependency value="platform.Include_dsp.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="core_cm4.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Include_core_cm4_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_dsp.LPC54S018M" name="CMSIS_Include_dsp" brief="Cmsis_include_dsp" version="1.7.0" full_name="Cmsis_include_dsp" devices="LPC54S018J2M LPC54S018J4M" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Include_dsp_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="COPY_BSD_License.LPC54S018M" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="LPC54S018J2M LPC54S018J4M" user_visible="true" type="other" package_base_path="./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.LPC54S018M.LPC54S018M" name="LPC54S018M" brief="Devices_project_template LPC54S018M" version="1.0.0" full_name="Devices_project_template LPC54S018M" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/LPC54S018M/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="component.usart_adapter.LPC54S018M"/>
          <component_dependency value="device.LPC54S018M_startup.LPC54S018M"/>
          <component_dependency value="platform.drivers.flexcomm_usart.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_gpio.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_iocon.LPC54S018M"/>
          <component_dependency value="platform.drivers.flexcomm.LPC54S018M"/>
          <component_dependency value="platform.drivers.power.LPC54S018M"/>
          <component_dependency value="platform.drivers.reset.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="platform.drivers.clock.LPC54S018M"/>
          <component_dependency value="platform.drivers.emc.LPC54S018M"/>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.LPC54S018M"/>
              <component_dependency value="utility.debug_console.LPC54S018M"/>
            </all>
            <component_dependency value="utility.debug_console_lite.LPC54S018M"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.LPC54S018M" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/LPC54S018M/template" project_base_path="board">
      <dependencies>
        <component_dependency value="platform.drivers.lpc_dma.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.LPC54S018M" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="LPC54S018J2M LPC54S018J4M" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="component.button.LPC54S018M" name="button" brief="Component button" version="1.0.0" full_name="Component button" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.timer_manager.LPC54S018M"/>
          <component_dependency value="component.lpc_gpio_adapter.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.LPC54S018M" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.osa.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.ctimer_adapter.LPC54S018M" name="ctimer_adapter" brief="Component ctimer_adapter" version="1.0.0" full_name="Component ctimer_adapter" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="platform.drivers.ctimer.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.gint_adapter.LPC54S018M" name="gint_adapter" brief="Component gint_adapter" version="1.0.0" full_name="Component gint_adapter" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <component_dependency value="platform.drivers.gint.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gint.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.led.LPC54S018M" name="led" brief="Component led" version="1.0.0" full_name="Component led" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.timer_manager.LPC54S018M"/>
          <component_dependency value="component.lpc_gpio_adapter.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.LPC54S018M" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_lists_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.LPC54S018M" name="log" brief="Component log" version="1.0.0" full_name="Component log" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="utility.debug_console.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debugconsole.LPC54S018M" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.log.LPC54S018M"/>
          <component_dependency value="utility.debug_console.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.LPC54S018M" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.log.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpc_crc_adapter.LPC54S018M" name="lpc_crc_adapter" brief="Component lpc_crc_adapter" version="1.0.0" full_name="Component lpc_crc_adapter" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_crc.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpc_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpc_gpio_adapter.LPC54S018M" name="lpc_gpio_adapter" brief="Component lpc_gpio_adapter" version="1.0.0" full_name="Component lpc_gpio_adapter" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpc_gpio.LPC54S018M"/>
          <component_dependency value="platform.drivers.inputmux.LPC54S018M"/>
          <component_dependency value="platform.drivers.pint.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpc_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.LPC54S018M" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.lists.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.LPC54S018M" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.lists.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash.common.LPC54S018M" name="mflash common" brief="mflash common" version="1.0.0" full_name="statically allocated file system for mflash" devices="LPC54S018J2M LPC54S018J4M" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash.lpc54s018m.LPC54S018M" name="mflash lpc54s018m" brief="mflash lpc54s018m" version="1.0.0" full_name="mflash lpc54s018m" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/flash/mflash/lpc54s018m" project_base_path="flash/mflash/lpc54s018m">
      <dependencies>
        <all>
          <component_dependency value="component.mflash.common.LPC54S018M"/>
          <component_dependency value="platform.drivers.spifi.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="mflash_drv.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="mflash_drv.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_file.LPC54S018M" name="mflash file" brief="mflash file" version="1.0.0" full_name="statically allocated file system for mflash" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <component_dependency value="component.mflash.lpc54s018m.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mrt_adapter.LPC54S018M" name="mrt_adapter" brief="Component mrt_adapter" version="1.0.0" full_name="Component mrt_adapter" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="platform.drivers.mrt.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_mrt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.LPC54S018M" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.lists.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54S018M" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54S018M" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.LPC54S018M" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.lists.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.panic.LPC54S018M" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="utility.debug_console.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_ctimer_adapter.LPC54S018M" name="pwm_ctimer_adapter" brief="Component pwm_ctimer_adapter" version="1.0.0" full_name="Component pwm_ctimer_adapter" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="abstraction_layer" package_base_path="components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="platform.drivers.ctimer.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.rng_adapter.LPC54S018M" name="rng_adapter" brief="Component rng_adapter" version="1.0.0" full_name="Component rng_adapter" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="platform.drivers.rng.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.LPC54S018M" name="serial_manager" brief="Component serial_manager" version="1.0.0" full_name="Serial Manager" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.lists.LPC54S018M"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.LPC54S018M"/>
            <component_dependency value="component.serial_manager_swo.LPC54S018M"/>
            <component_dependency value="component.serial_manager_virtual.LPC54S018M"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.LPC54S018M" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.serial_manager.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.LPC54S018M" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.usart_adapter.LPC54S018M"/>
          <component_dependency value="component.serial_manager.LPC54S018M"/>
          <component_dependency value="platform.drivers.flexcomm_usart.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.LPC54S018M" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.LPC54S018M" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.LPC54S018M" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.LPC54S018M" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="component.lists.LPC54S018M"/>
          <any_of>
            <component_dependency value="component.ctimer_adapter.LPC54S018M"/>
            <component_dependency value="component.mrt_adapter.LPC54S018M"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.usart_adapter.LPC54S018M" name="usart_adapter" brief="Component usart_adapter" version="1.0.0" full_name="usart_adapter" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="platform.drivers.flexcomm_usart.LPC54S018M"/>
          <component_dependency value="platform.drivers.flexcomm.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_usart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_usart_adapter_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.LPC54S018M_CMSIS.LPC54S018M" name="LPC54S018M_CMSIS" brief="Device LPC54S018M_cmsis" version="1.0.0" full_name="Device LPC54S018M_cmsis" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="CMSIS_Include" package_base_path="devices/LPC54S018M" project_base_path="device">
      <dependencies>
        <component_dependency value="platform.Include_core_cm4.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
        <files mask="LPC54S018M.h"/>
        <files mask="LPC54S018M_features.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_LPC54S018M_CMSIS_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.LPC54S018M_debugger.LPC54S018M" name="LPC54S018M_debugger" brief="Device LPC54S018M_debugger" version="1.0.0" full_name="Device LPC54S018M_debugger" devices="LPC54S018J2M LPC54S018J4M" user_visible="true" type="debugger" package_base_path="devices/LPC54S018M" project_base_path="LPC54S018M">
      <source relative_path="./" type="xml">
        <files mask="LPC54S018M.xml"/>
      </source>
    </component>
    <component id="platform.devices.LPC54S018M_linker.LPC54S018M" name="LPC54S018M_linker" brief="Device LPC54S018M_linker" version="1.0.0" full_name="Device LPC54S018M_linker" devices="LPC54S018J2M LPC54S018J4M" user_visible="true" type="linker" package_base_path="devices/LPC54S018M" project_base_path="LPC54S018M">
      <source toolchain="armgcc" relative_path="gcc" type="linker">
        <files mask="LPC54S018J2M_ram.ld"/>
        <files mask="LPC54S018J2M_spifi_flash.ld"/>
        <files mask="LPC54S018J4M_ram.ld"/>
        <files mask="LPC54S018J4M_spifi_flash.ld"/>
      </source>
    </component>
    <component id="device.LPC54S018M_startup.LPC54S018M" name="LPC54S018M_startup" brief="Device LPC54S018M_startup" version="1.1.0" full_name="Device LPC54S018M_startup" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/LPC54S018M" project_base_path="startup">
      <dependencies>
        <component_dependency value="device.LPC54S018M_system.LPC54S018M"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="gcc" project_relative_path="./" type="asm_include">
        <files mask="startup_LPC54S018M.S"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_c">
        <files mask="startup_lpc54s018m.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_cpp">
        <files mask="startup_lpc54s018m.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_LPC54S018M_startup_LPC54S018M.cmake" hidden="true"/>
      </source>
    </component>
    <component id="device.LPC54S018M_system.LPC54S018M" name="LPC54S018M_system" brief="Device LPC54S018M_system" version="1.0.0" full_name="Device LPC54S018M_system" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="CMSIS_Include" package_base_path="devices/LPC54S018M" project_base_path="device">
      <dependencies>
        <component_dependency value="device.LPC54S018M_CMSIS.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="system_LPC54S018M.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="system_LPC54S018M.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_LPC54S018M_system_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.LPC54S018M.LPC54S018M" name="LPC54S018M" brief="Docs lpc54s018m" version="1.0.0" full_name="Docs lpc54s018m" devices="LPC54S018J2M LPC54S018J4M" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for LPCXpresso54S018M.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for LPCXpresso54S018M.pdf"/>
      </source>
    </component>
    <component id="platform.drivers.aes.LPC54S018M" name="aes" brief="AES Driver" version="2.0.2" full_name="AES Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/aes" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_aes.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_aes.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.LPC54S018M" name="clock" brief="Clock Driver" version="2.2.0" full_name="Clock Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="devices/LPC54S018M/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.power.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_clock_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.LPC54S018M" name="common" brief="COMMON Driver" version="2.2.9" full_name="COMMON Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/common" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.LPC54S018M"/>
          <component_dependency value="device.LPC54S018M_CMSIS.LPC54S018M"/>
          <component_dependency value="platform.drivers.reset.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_common_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ctimer.LPC54S018M" name="ctimer" brief="CTimer Driver" version="2.2.1" full_name="CTimer Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/ctimer" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic.LPC54S018M" name="dmic" brief="DMIC Driver" version="2.3.0" full_name="DMIC Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/dmic" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic_dma.LPC54S018M" name="dmic_dma" brief="DMIC DMA Driver" version="2.3.0" full_name="DMIC DMA Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/dmic" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dmic.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic_dma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic_hwvad.LPC54S018M" name="dmic_hwvad" brief="DMIC HWVAD Driver" version="2.3.0" full_name="DMIC HWVAD Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/dmic" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dmic.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.emc.LPC54S018M" name="emc" brief="EMC Driver" version="2.0.4" full_name="EMC Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/emc" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_emc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_emc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_emc_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm.LPC54S018M" name="flexcomm" brief="FLEXCOMM Driver" version="2.0.2" full_name="FLEXCOMM Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcomm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcomm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexcomm_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c.LPC54S018M" name="i2c" brief="I2C Driver" version="2.1.0" full_name="FLEXCOMM I2C Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexcomm_i2c_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_dma.LPC54S018M" name="i2c_dma" brief="I2C Driver" version="2.1.0" full_name="FLEXCOMM I2C DMA Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="platform.drivers.flexcomm_i2c.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexcomm_i2c_dma_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2s.LPC54S018M" name="flexcomm_i2s" brief="I2S Driver" version="2.2.2" full_name="FLEXCOMM I2S Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2s_dma.LPC54S018M" name="flexcomm_i2s_dma" brief="I2S Driver" version="2.2.2" full_name="FLEXCOMM I2S DMA Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2s.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s_dma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi.LPC54S018M" name="spi" brief="SPI Driver" version="2.2.1" full_name="FLEXCOMM SPI Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexcomm_spi_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_dma.LPC54S018M" name="spi_dma" brief="SPI Driver" version="2.1.1" full_name="FLEXCOMM SPI DMA Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54S018M"/>
          <component_dependency value="platform.drivers.flexcomm_spi.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_dma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart.LPC54S018M" name="usart" brief="USART Driver" version="2.4.0" full_name="FLEXCOMM USART Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexcomm.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexcomm_usart_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_dma.LPC54S018M" name="usart_dma" brief="USART Driver" version="2.3.1" full_name="FLEXCOMM USART DMA Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54S018M"/>
          <component_dependency value="platform.drivers.flexcomm_usart.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_dma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.fmeas.LPC54S018M" name="fmeas" brief="FMEAS Driver" version="2.1.1" full_name="FMEAS Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/fmeas" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fmeas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fmeas.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.fro_calib.LPC54S018M" name="fro_calib" brief="FRO calibration Lib" version="2.0.1" full_name="Driver fro_calib" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="devices/LPC54S018M" project_base_path="LPC54S018M">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="drivers" type="c_include">
        <files mask="fsl_fro_calib.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" type="lib">
        <files mask="libfro_calib_hardabi.a"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="lib">
        <files mask="libfro_calib_hardabi.a"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="other">
        <files mask="libfro_calib_softabi.a" hidden="true"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" type="other">
        <files mask="libfro_calib_softabi.a"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gint.LPC54S018M" name="gint" brief="GINT Driver" version="2.0.3" full_name="GINT Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/gint" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gint.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gint.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iap.LPC54S018M" name="iap" brief="IAP Driver" version="2.0.4" full_name="IAP Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/iap" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iap.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_iap.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux.LPC54S018M" name="inputmux" brief="INPUTMUX Driver" version="2.0.3" full_name="INPUTMUX Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/inputmux" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
          <component_dependency value="platform.drivers.inputmux_connections.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_inputmux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_inputmux_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux_connections.LPC54S018M" name="inputmux_connections" brief="Inputmux_connections Driver" version="2.0.1" full_name="Inputmux_connections Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="devices/LPC54S018M/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux_connections.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_inputmux_connections_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_adc.LPC54S018M" name="adc" brief="ADC Driver" version="2.5.0" full_name="ADC Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/lpc_adc" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_crc.LPC54S018M" name="lpc_crc" brief="CRC Driver" version="2.1.1" full_name="CRC Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/lpc_crc" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpc_crc_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_dma.LPC54S018M" name="dma" brief="DMA Driver" version="2.4.2" full_name="DMA Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/lpc_dma" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpc_dma_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_enet.LPC54S018M" name="lpc_enet" brief="enet Driver" version="2.1.5" full_name="enet Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/lpc_enet" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpc_enet_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_gpio.LPC54S018M" name="gpio" brief="GPIO Driver" version="2.1.7" full_name="GPIO Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/lpc_gpio" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpc_gpio_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_iocon.LPC54S018M" name="iocon" brief="IOCON Driver" version="2.1.2" full_name="IOCON Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/lpc_iocon" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iocon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpc_iocon_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_lcdc.LPC54S018M" name="lcdc" brief="LCDC Driver" version="2.0.2" full_name="LCDC Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/lpc_lcdc" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lcdc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lcdc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_rtc.LPC54S018M" name="lpc_rtc" brief="RTC Driver" version="2.1.2" full_name="RTC Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/lpc_rtc" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rtc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mcan.LPC54S018M" name="mcan" brief="MCAN Driver" version="2.1.3" full_name="MCAN Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/mcan" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mcan.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mcan.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.mdio-common.LPC54S018M" name="mdio-common" brief="Driver mdio-common" version="2.0.0" full_name="Driver mdio-common" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="board_component" package_base_path="components/phy" project_base_path="mdio">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_mdio-common_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.mdio-lpc-enet.LPC54S018M" name="mdio-lpc-enet" brief="Driver mdio-lpc-enet" version="2.0.0" full_name="Driver mdio-lpc-enet" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="board_component" package_base_path="components/phy/mdio/lpc_enet" project_base_path="mdio">
      <dependencies>
        <all>
          <component_dependency value="driver.mdio-common.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_enet.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet_mdio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet_mdio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_mdio-lpc-enet_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mrt.LPC54S018M" name="mrt" brief="MRT Driver" version="2.0.3" full_name="MRT Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/mrt" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mrt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mrt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.otp.LPC54S018M" name="otp" brief="OTP Driver" version="2.0.0" full_name="OTP Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/otp" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_otp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.phy-common.LPC54S018M" name="phy-common" brief="Driver phy-common" version="2.0.0" full_name="Driver phy-common" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="software_component" package_base_path="components/phy" project_base_path="phy">
      <dependencies>
        <component_dependency value="driver.mdio-common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_phy-common_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.phy-device-lan8720a.LPC54S018M" name="phy-device-lan8720a" brief="Driver phy-device-lan8720a" version="2.0.0" full_name="Driver phy-device-lan8720a" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="board_component" package_base_path="components/phy/device/phylan8720a" project_base_path="phy">
      <dependencies>
        <component_dependency value="driver.phy-common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phylan8720a.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_phylan8720a.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_phy-device-lan8720a_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pint.LPC54S018M" name="pint" brief="PINT Driver" version="2.1.8" full_name="PINT Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/pint" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pint.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pint.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.power.LPC54S018M" name="power" brief="Power driver" version="2.0.0" full_name="power" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="devices/LPC54S018M" project_base_path="LPC54S018M">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="drivers" type="c_include">
        <files mask="fsl_power.h"/>
      </source>
      <source relative_path="drivers" type="src">
        <files mask="fsl_power.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" type="lib" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M">
        <files mask="libpower_hardabi.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" type="other" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M">
        <files mask="libpower_softabi.a"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="lib" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M">
        <files mask="libpower_hardabi.a"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="other" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M">
        <files mask="libpower_softabi.a" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_power_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.puf.LPC54S018M" name="PUF" brief="PUF Driver" version="2.1.3" full_name="PUF Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/puf" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_puf.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_puf.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_puf_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.reset.LPC54S018M" name="reset" brief="Reset Driver" version="2.0.1" full_name="Reset Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="devices/LPC54S018M/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_reset.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_reset_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rit.LPC54S018M" name="rit" brief="RIT Driver" version="2.1.1" full_name="RIT Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/lpc_rit" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rit.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rit.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rng.LPC54S018M" name="rng" brief="RNG Driver" version="2.0.0" full_name="RNG Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/rng" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rng.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sctimer.LPC54S018M" name="sctimer" brief="SCT Driver" version="2.3.0" full_name="SCT Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/sctimer" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sdif.LPC54S018M" name="sdif" brief="sdif Driver" version="2.0.15" full_name="sdif Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/sdif" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_sdif.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sdif.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sha.LPC54S018M" name="sha" brief="SHA Driver" version="2.2.2" full_name="SHA Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/sha" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sha.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sha.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spifi.LPC54S018M" name="spifi" brief="SPIFI Driver" version="2.0.3" full_name="SPIFI Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/spifi" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spifi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spifi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spifi_dma.LPC54S018M" name="spifi_dma" brief="SPIFI Driver" version="2.0.3" full_name="SPIFI DMA Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/spifi" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.spifi.LPC54S018M"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spifi_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spifi_dma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.utick.LPC54S018M" name="utick" brief="UTICK Driver" version="2.0.4" full_name="UTICK Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/utick" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_utick.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_utick.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wwdt.LPC54S018M" name="wwdt" brief="WWDT Driver" version="2.1.9" full_name="WWDT Driver" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="driver" package_base_path="drivers/wwdt" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wwdt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wwdt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.LPC54S018M" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="LPC54S018J2M LPC54S018J4M" user_visible="true" type="OS" package_base_path="middleware" project_base_path="middleware">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.usb.common_header.LPC54S018M" name="USB Common Header" brief="Middleware usb common_header" version="2.7.0" full_name="USB Common Header" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="component.osa.LPC54S018M"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.LPC54S018M" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.7.0" full_name="USB Device Common Header" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.LPC54S018M"/>
          <component_dependency value="middleware.usb.common_header.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.LPC54S018M" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" full_name="Utilities miscellaneous" devices="LPC54S018J2M LPC54S018J4M" user_visible="true" type="utilities" package_base_path="utilities/misc_utilities" project_base_path="utilities">
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utilities_misc_utilities_LPC54S018M.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert.LPC54S018M" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="utilities/assert" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.LPC54S018M" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="utilities/assert" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_assert_lite_LPC54S018M.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console.LPC54S018M" name="debug_console" brief="Utility debug_console" version="1.0.0" full_name="Utility debug_console" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="utilities/debug_console" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.LPC54S018M" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.usart_adapter.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_debug_console_lite_LPC54S018M.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.notifier.LPC54S018M" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="devices/LPC54S018M/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54S018M"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.LPC54S018M" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" devices="LPC54S018J2M LPC54S018J4M" device_cores="core0_LPC54S018J2M core0_LPC54S018J4M" user_visible="true" type="utilities" package_base_path="devices/LPC54S018M/utilities" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.LPC54S018M"/>
          <component_dependency value="component.lists.LPC54S018M"/>
          <component_dependency value="platform.drivers.common.LPC54S018M"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
